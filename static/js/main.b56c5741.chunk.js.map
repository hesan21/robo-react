{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/searchbox/searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACnE,mCAAOL,EAAMG,QAAQG,KAArB,YCFKC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAEID,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBM,G,YAAY,SAACV,GAAD,OACrB,uBAAOW,KAAK,SACRV,UAAU,SACVW,YAAaZ,EAAMY,YACnBC,SAAUb,EAAMc,iBCqCTC,E,kDApCb,aAAc,IAAD,8BACX,gBAcFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAMG,OAAOC,SAb3C,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IALL,E,gEASO,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAWkB,S,+BAMrC,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQG,KAAKwB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZE,aAAea,KAAKb,eACtB,cAAC,EAAD,CAAUN,SAAUoB,W,GAhCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b56c5741.chunk.js","sourcesContent":["import './card.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\"/>\r\n        <h2> { props.monster.name} </h2>\r\n    </div>\r\n)","import { Card } from \"../card/card\";\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n    {\r\n        props.monsters.map(monster => \r\n            <Card key={monster.id} monster={monster}/>\r\n        )\r\n    }\r\n    </div>\r\n);","import \"./searchbox.css\";\r\n\r\nexport const SearchBox = (props) => (\r\n    <input type=\"search\" \r\n        className=\"search\"\r\n        placeholder={props.placeholder}\r\n        onChange={props.handleChange}/>\r\n);","import { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list\";\nimport './App.css';\nimport { SearchBox } from \"./components/searchbox/searchbox\";\n\nclass App extends Component{\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters : users}));\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchField : event.target.value});\n  }\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder=\"Search Monster\"\n          handleChange ={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}